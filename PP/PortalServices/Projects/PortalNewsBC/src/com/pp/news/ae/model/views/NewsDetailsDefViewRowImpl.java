package com.pp.news.ae.model.views;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import oracle.stellent.ridc.IdcClient;
import oracle.stellent.ridc.IdcClientException;
import oracle.stellent.ridc.IdcClientManager;
import oracle.stellent.ridc.IdcContext;
import oracle.stellent.ridc.model.DataBinder;
import oracle.stellent.ridc.protocol.ServiceResponse;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 29 18:00:49 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NewsDetailsDefViewRowImpl extends ViewRowImpl {
    private String username;
    private String password;
    private String url;
    private IdcClient idcClient;
    private IdcContext userContext;
    private DataBinder binder;
    private String b_orgurl;
    private String b_replaceurl;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        NewsId {
            public Object get(NewsDetailsDefViewRowImpl obj) {
                return obj.getNewsId();
            }

            public void put(NewsDetailsDefViewRowImpl obj, Object value) {
                obj.setNewsId((Number)value);
            }
        },
        NewsDate {
            public Object get(NewsDetailsDefViewRowImpl obj) {
                return obj.getNewsDate();
            }

            public void put(NewsDetailsDefViewRowImpl obj, Object value) {
                obj.setNewsDate((Date)value);
            }
        },
        NewsSubj {
            public Object get(NewsDetailsDefViewRowImpl obj) {
                return obj.getNewsSubj();
            }

            public void put(NewsDetailsDefViewRowImpl obj, Object value) {
                obj.setNewsSubj((String)value);
            }
        },
        NewsDesc {
            public Object get(NewsDetailsDefViewRowImpl obj) {
                return obj.getNewsDesc();
            }

            public void put(NewsDetailsDefViewRowImpl obj, Object value) {
                obj.setNewsDesc((String)value);
            }
        },
        NewsDetails1 {
            public Object get(NewsDetailsDefViewRowImpl obj) {
                return obj.getNewsDetails1();
            }

            public void put(NewsDetailsDefViewRowImpl obj, Object value) {
                obj.setNewsDetails1((String)value);
            }
        },
        NewsImg {
            public Object get(NewsDetailsDefViewRowImpl obj) {
                return obj.getNewsImg();
            }

            public void put(NewsDetailsDefViewRowImpl obj, Object value) {
                obj.setNewsImg((BlobDomain)value);
            }
        },
        NewsPath {
            public Object get(NewsDetailsDefViewRowImpl obj) {
                return obj.getNewsPath();
            }

            public void put(NewsDetailsDefViewRowImpl obj, Object value) {
                obj.setNewsPath((String)value);
            }
        },
        RowID {
            public Object get(NewsDetailsDefViewRowImpl obj) {
                return obj.getRowID();
            }

            public void put(NewsDetailsDefViewRowImpl obj, Object value) {
                obj.setRowID((RowID)value);
            }
        },
        NewsUcmId {
            public Object get(NewsDetailsDefViewRowImpl obj) {
                return obj.getNewsUcmId();
            }

            public void put(NewsDetailsDefViewRowImpl obj, Object value) {
                obj.setNewsUcmId((String)value);
            }
        },
        NewsUCMPath {
            public Object get(NewsDetailsDefViewRowImpl obj) {
                return obj.getNewsUCMPath();
            }

            public void put(NewsDetailsDefViewRowImpl obj, Object value) {
                obj.setNewsUCMPath((String)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(NewsDetailsDefViewRowImpl object);

        public abstract void put(NewsDetailsDefViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int NEWSID = AttributesEnum.NewsId.index();
    public static final int NEWSDATE = AttributesEnum.NewsDate.index();
    public static final int NEWSSUBJ = AttributesEnum.NewsSubj.index();
    public static final int NEWSDESC = AttributesEnum.NewsDesc.index();
    public static final int NEWSDETAILS1 = AttributesEnum.NewsDetails1.index();
    public static final int NEWSIMG = AttributesEnum.NewsImg.index();
    public static final int NEWSPATH = AttributesEnum.NewsPath.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int NEWSUCMID = AttributesEnum.NewsUcmId.index();
    public static final int NEWSUCMPATH = AttributesEnum.NewsUCMPath.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NewsDetailsDefViewRowImpl() {
//        intiateConnection();
    }

    /**
     * Gets NewsDetails entity object.
     * @return the NewsDetails
     */
    public EntityImpl getNewsDetails() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for NEWS_ID using the alias name NewsId.
     * @return the NEWS_ID
     */
    public Number getNewsId() {
        return (Number)getAttributeInternal(NEWSID);
    }

    /**
     * Sets <code>value</code> as attribute value for NEWS_ID using the alias name NewsId.
     * @param value value to set the NEWS_ID
     */
    public void setNewsId(Number value) {
        setAttributeInternal(NEWSID, value);
    }

    /**
     * Gets the attribute value for NEWS_DATE using the alias name NewsDate.
     * @return the NEWS_DATE
     */
    public Date getNewsDate() {
        return (Date)getAttributeInternal(NEWSDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for NEWS_DATE using the alias name NewsDate.
     * @param value value to set the NEWS_DATE
     */
    public void setNewsDate(Date value) {
        setAttributeInternal(NEWSDATE, value);
    }

    /**
     * Gets the attribute value for NEWS_SUBJ using the alias name NewsSubj.
     * @return the NEWS_SUBJ
     */
    public String getNewsSubj() {
        return (String)getAttributeInternal(NEWSSUBJ);
    }

    /**
     * Sets <code>value</code> as attribute value for NEWS_SUBJ using the alias name NewsSubj.
     * @param value value to set the NEWS_SUBJ
     */
    public void setNewsSubj(String value) {
        setAttributeInternal(NEWSSUBJ, value);
    }

    /**
     * Gets the attribute value for NEWS_DESC using the alias name NewsDesc.
     * @return the NEWS_DESC
     */
    public String getNewsDesc() {
        return (String)getAttributeInternal(NEWSDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for NEWS_DESC using the alias name NewsDesc.
     * @param value value to set the NEWS_DESC
     */
    public void setNewsDesc(String value) {
        setAttributeInternal(NEWSDESC, value);
    }

    /**
     * Gets the attribute value for NEWS_DETAILS using the alias name NewsDetails1.
     * @return the NEWS_DETAILS
     */
    public String getNewsDetails1() {
        return (String)getAttributeInternal(NEWSDETAILS1);
    }

    /**
     * Sets <code>value</code> as attribute value for NEWS_DETAILS using the alias name NewsDetails1.
     * @param value value to set the NEWS_DETAILS
     */
    public void setNewsDetails1(String value) {
        setAttributeInternal(NEWSDETAILS1, value);
    }

    /**
     * Gets the attribute value for NEWS_IMG using the alias name NewsImg.
     * @return the NEWS_IMG
     */
    public BlobDomain getNewsImg() {
        return (BlobDomain)getAttributeInternal(NEWSIMG);
    }

    /**
     * Sets <code>value</code> as attribute value for NEWS_IMG using the alias name NewsImg.
     * @param value value to set the NEWS_IMG
     */
    public void setNewsImg(BlobDomain value) {
        setAttributeInternal(NEWSIMG, value);
    }

    /**
     * Gets the attribute value for NEWS_PATH using the alias name NewsPath.
     * @return the NEWS_PATH
     */
    public String getNewsPath() {
        return (String)getAttributeInternal(NEWSPATH);
    }

    /**
     * Sets <code>value</code> as attribute value for NEWS_PATH using the alias name NewsPath.
     * @param value value to set the NEWS_PATH
     */
    public void setNewsPath(String value) {
        setAttributeInternal(NEWSPATH, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public RowID getRowID() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROWID using the alias name RowID.
     * @param value value to set the ROWID
     */
    public void setRowID(RowID value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * Gets the attribute value for NEWS_UCM_ID using the alias name NewsUcmId.
     * @return the NEWS_UCM_ID
     */
    public String getNewsUcmId() {
        return (String)getAttributeInternal(NEWSUCMID);
    }

    /**
     * Sets <code>value</code> as attribute value for NEWS_UCM_ID using the alias name NewsUcmId.
     * @param value value to set the NEWS_UCM_ID
     */
    public void setNewsUcmId(String value) {
        setAttributeInternal(NEWSUCMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NewsUCMPath.
     * @return the NewsUCMPath
     */
    public String getNewsUCMPath() {
        //        return (String) getAttributeInternal(NEWSUCMPATH);
        intiateConnection();
        String docid = this.getNewsUcmId();
        String val = this.getURLFromdID(docid);
//        String value =
//            val.replace("PP-App-rep:16200", "demoserver.tacme.net:12127");
        	        String value =
            val.replace(b_orgurl, b_replaceurl);
        if (value != null) {
            return value;
        } else {
            return (String)getAttributeInternal(NEWSUCMPATH);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NewsUCMPath.
     * @param value value to set the  NewsUCMPath
     */
    public void setNewsUCMPath(String value) {
        setAttributeInternal(NEWSUCMPATH, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public void intiateConnection() {
        try {
            ApplicationModule am = this.getApplicationModule();
            ViewObject vo = am.findViewObject("UcmConfigView1");
            vo.setNamedWhereClauseParam("uctype", "N");
            vo.executeQuery();
            if (vo.getEstimatedRowCount() != 0) {
                Row vr = vo.first();
                String un = (String)vr.getAttribute("UcUsername");
                String pwrd = (String)vr.getAttribute("UcPassword");
                String b_url = (String)vr.getAttribute("UcUrl");
                String portno = (String)vr.getAttribute("UcPortno");
                b_orgurl = (String)vr.getAttribute("OrgUrl");
                                b_replaceurl = (String)vr.getAttribute("ReplaceUrl");
                username = un;
                password = pwrd;
                url = b_url + ":" + portno;
                //            this.username = "weblogic";
                //            this.password = "weblogic1";
                //            this.url = "idc://192.168.3.113:4444";
                IdcClientManager manager = new IdcClientManager();
                this.idcClient = manager.createClient(this.url);
                this.userContext =
                        new IdcContext(this.username, this.password);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    public String getURLFromdID(String dID) {
        this.binder = this.idcClient.createBinder();
        try {
            this.binder.putLocal("IdcService", "DOC_INFO");
            this.binder.putLocal("dID", dID);
            ServiceResponse response =
                idcClient.sendRequest(this.userContext, this.binder);
            DataBinder respBinder = response.getResponseAsBinder();
            if (respBinder != null)
                return respBinder.getLocal("DocUrl");
        } catch (IdcClientException ice) {
            ice.printStackTrace();
        }
        return null;
    }
}
