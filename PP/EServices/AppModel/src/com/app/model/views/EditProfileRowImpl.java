package com.app.model.views;

import java.text.ParseException;
import java.text.SimpleDateFormat;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Mar 25 15:18:38 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EditProfileRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        FirstName {
            public Object get(EditProfileRowImpl obj) {
                return obj.getFirstName();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setFirstName((String)value);
            }
        }
        ,
        RowID {
            public Object get(EditProfileRowImpl obj) {
                return obj.getRowID();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setRowID((oracle.jbo.domain.RowID)value);
            }
        }
        ,
        LastName {
            public Object get(EditProfileRowImpl obj) {
                return obj.getLastName();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setLastName((String)value);
            }
        }
        ,
        FamilyName {
            public Object get(EditProfileRowImpl obj) {
                return obj.getFamilyName();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setFamilyName((String)value);
            }
        }
        ,
        Mobile {
            public Object get(EditProfileRowImpl obj) {
                return obj.getMobile();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setMobile((String)value);
            }
        }
        ,
        Dob {
            public Object get(EditProfileRowImpl obj) {
                return obj.getDob();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setDob((String)value);
            }
        }
        ,
        Education {
            public Object get(EditProfileRowImpl obj) {
                return obj.getEducation();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setEducation((String)value);
            }
        }
        ,
        Nationality {
            public Object get(EditProfileRowImpl obj) {
                return obj.getNationality();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setNationality((String)value);
            }
        }
        ,
        Occupation {
            public Object get(EditProfileRowImpl obj) {
                return obj.getOccupation();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setOccupation((String)value);
            }
        }
        ,
        UnionNo {
            public Object get(EditProfileRowImpl obj) {
                return obj.getUnionNo();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setUnionNo((String)value);
            }
        }
        ,
        EmiratesId {
            public Object get(EditProfileRowImpl obj) {
                return obj.getEmiratesId();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setEmiratesId((String)value);
            }
        }
        ,
        EmiratesIdExpiry {
            public Object get(EditProfileRowImpl obj) {
                return obj.getEmiratesIdExpiry();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setEmiratesIdExpiry((String)value);
            }
        }
        ,
        Id {
            public Object get(EditProfileRowImpl obj) {
                return obj.getId();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        Password {
            public Object get(EditProfileRowImpl obj) {
                return obj.getPassword();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setPassword((String)value);
            }
        }
        ,
        LOVNationalitySwitcher {
            public Object get(EditProfileRowImpl obj) {
                return obj.getLOVNationalitySwitcher();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setLOVNationalitySwitcher((String)value);
            }
        }
        ,
        Language {
            public Object get(EditProfileRowImpl obj) {
                return obj.getLanguage();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setLanguage((String)value);
            }
        }
        ,
        Email {
            public Object get(EditProfileRowImpl obj) {
                return obj.getEmail();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setEmail((String)value);
            }
        }
        ,
        CountryNationalityEngView1 {
            public Object get(EditProfileRowImpl obj) {
                return obj.getCountryNationalityEngView1();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CountryNationalityArabView1 {
            public Object get(EditProfileRowImpl obj) {
                return obj.getCountryNationalityArabView1();
            }

            public void put(EditProfileRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(EditProfileRowImpl object);

        public abstract void put(EditProfileRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int FAMILYNAME = AttributesEnum.FamilyName.index();
    public static final int MOBILE = AttributesEnum.Mobile.index();
    public static final int DOB = AttributesEnum.Dob.index();
    public static final int EDUCATION = AttributesEnum.Education.index();
    public static final int NATIONALITY = AttributesEnum.Nationality.index();
    public static final int OCCUPATION = AttributesEnum.Occupation.index();
    public static final int UNIONNO = AttributesEnum.UnionNo.index();
    public static final int EMIRATESID = AttributesEnum.EmiratesId.index();
    public static final int EMIRATESIDEXPIRY = AttributesEnum.EmiratesIdExpiry.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int LOVNATIONALITYSWITCHER = AttributesEnum.LOVNationalitySwitcher.index();
    public static final int LANGUAGE = AttributesEnum.Language.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int COUNTRYNATIONALITYENGVIEW1 = AttributesEnum.CountryNationalityEngView1.index();
    public static final int COUNTRYNATIONALITYARABVIEW1 = AttributesEnum.CountryNationalityArabView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EditProfileRowImpl() {
    }

    /**
     * Gets PuPublicuser entity object.
     * @return the PuPublicuser
     */
    public EntityImpl getPuPublicuser() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name FirstName.
     * @return the FIRST_NAME
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public RowID getRowID() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROWID using the alias name RowID.
     * @param value value to set the ROWID
     */
    public void setRowID(RowID value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name LastName.
     * @return the LAST_NAME
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
     * @param value value to set the LAST_NAME
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for FAMILY_NAME using the alias name FamilyName.
     * @return the FAMILY_NAME
     */
    public String getFamilyName() {
        return (String) getAttributeInternal(FAMILYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FAMILY_NAME using the alias name FamilyName.
     * @param value value to set the FAMILY_NAME
     */
    public void setFamilyName(String value) {
        setAttributeInternal(FAMILYNAME, value);
    }

    /**
     * Gets the attribute value for MOBILE using the alias name Mobile.
     * @return the MOBILE
     */
    public String getMobile() {
        return (String) getAttributeInternal(MOBILE);
    }

    /**
     * Sets <code>value</code> as attribute value for MOBILE using the alias name Mobile.
     * @param value value to set the MOBILE
     */
    public void setMobile(String value) {
        setAttributeInternal(MOBILE, value);
    }

    /**
     * Gets the attribute value for DOB using the alias name Dob.
     * @return the DOB
     */
    public String getDob() {
        return (String) getAttributeInternal(DOB);
    }

    /**
     * Sets <code>value</code> as attribute value for DOB using the alias name Dob.
     * @param value value to set the DOB
     */
    public void setDob(String value) {
        if (value != null){
        String reformattedStr = new String();        
        SimpleDateFormat fromUser = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S");
        SimpleDateFormat myFormat = new SimpleDateFormat("dd-MM-yyyy");
        try {
            reformattedStr = myFormat.format(fromUser.parse(value));
        } catch (ParseException e) {
            e.printStackTrace();
        } 
        setAttributeInternal(DOB, reformattedStr);
        }else{
            setAttributeInternal(DOB, value);
        }
    }

    /**
     * Gets the attribute value for EDUCATION using the alias name Education.
     * @return the EDUCATION
     */
    public String getEducation() {
        return (String) getAttributeInternal(EDUCATION);
    }

    /**
     * Sets <code>value</code> as attribute value for EDUCATION using the alias name Education.
     * @param value value to set the EDUCATION
     */
    public void setEducation(String value) {
        setAttributeInternal(EDUCATION, value);
    }

    /**
     * Gets the attribute value for NATIONALITY using the alias name Nationality.
     * @return the NATIONALITY
     */
    public String getNationality() {
        return (String) getAttributeInternal(NATIONALITY);
    }

    /**
     * Sets <code>value</code> as attribute value for NATIONALITY using the alias name Nationality.
     * @param value value to set the NATIONALITY
     */
    public void setNationality(String value) {
        setAttributeInternal(NATIONALITY, value);
    }

    /**
     * Gets the attribute value for OCCUPATION using the alias name Occupation.
     * @return the OCCUPATION
     */
    public String getOccupation() {
        return (String) getAttributeInternal(OCCUPATION);
    }

    /**
     * Sets <code>value</code> as attribute value for OCCUPATION using the alias name Occupation.
     * @param value value to set the OCCUPATION
     */
    public void setOccupation(String value) {
        setAttributeInternal(OCCUPATION, value);
    }

    /**
     * Gets the attribute value for UNION_NO using the alias name UnionNo.
     * @return the UNION_NO
     */
    public String getUnionNo() {
        return (String) getAttributeInternal(UNIONNO);
    }

    /**
     * Sets <code>value</code> as attribute value for UNION_NO using the alias name UnionNo.
     * @param value value to set the UNION_NO
     */
    public void setUnionNo(String value) {
        setAttributeInternal(UNIONNO, value);
    }

    /**
     * Gets the attribute value for EMIRATES_ID using the alias name EmiratesId.
     * @return the EMIRATES_ID
     */
    public String getEmiratesId() {
        return (String) getAttributeInternal(EMIRATESID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMIRATES_ID using the alias name EmiratesId.
     * @param value value to set the EMIRATES_ID
     */
    public void setEmiratesId(String value) {
        setAttributeInternal(EMIRATESID, value);
    }

    /**
     * Gets the attribute value for EMIRATES_ID_EXPIRY using the alias name EmiratesIdExpiry.
     * @return the EMIRATES_ID_EXPIRY
     */
    public String getEmiratesIdExpiry() {
        return (String) getAttributeInternal(EMIRATESIDEXPIRY);
    }

    /**
     * Sets <code>value</code> as attribute value for EMIRATES_ID_EXPIRY using the alias name EmiratesIdExpiry.
     * @param value value to set the EMIRATES_ID_EXPIRY
     */
    public void setEmiratesIdExpiry(String value) {
        setAttributeInternal(EMIRATESIDEXPIRY, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for PASSWORD using the alias name Password.
     * @return the PASSWORD
     */
    public String getPassword() {
        return (String) getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSWORD using the alias name Password.
     * @param value value to set the PASSWORD
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LOVNationalitySwitcher.
     * @return the LOVNationalitySwitcher
     */
    public String getLOVNationalitySwitcher() {
        return (String) getAttributeInternal(LOVNATIONALITYSWITCHER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LOVNationalitySwitcher.
     * @param value value to set the  LOVNationalitySwitcher
     */
    public void setLOVNationalitySwitcher(String value) {
        setAttributeInternal(LOVNATIONALITYSWITCHER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Language.
     * @return the Language
     */
    public String getLanguage() {
        return (String) getAttributeInternal(LANGUAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Language.
     * @param value value to set the  Language
     */
    public void setLanguage(String value) {
        setAttributeInternal(LANGUAGE, value);
    }

    /**
     * Gets the attribute value for EMAIL using the alias name Email.
     * @return the EMAIL
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL using the alias name Email.
     * @param value value to set the EMAIL
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CountryNationalityEngView1.
     */
    public RowSet getCountryNationalityEngView1() {
        return (RowSet)getAttributeInternal(COUNTRYNATIONALITYENGVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CountryNationalityArabView1.
     */
    public RowSet getCountryNationalityArabView1() {
        return (RowSet)getAttributeInternal(COUNTRYNATIONALITYARABVIEW1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
